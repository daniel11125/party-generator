let characters = [];

const roleMap = {
  "ÌûêÎü¨": ["ÌûêÎü¨", "ÏÇ¨Ï†ú", "ÏùåÏú†ÏãúÏù∏"],
  "ÌÉ±Ïª§": ["Ï†ÑÏÇ¨", "ÎåÄÍ≤ÄÏ†ÑÏÇ¨", "ÎπôÍ≤∞Ïà†ÏÇ¨", "ÏàòÎèÑÏÇ¨"],
  "ÎîúÎü¨": ["Í≤ÄÏà†ÏÇ¨", "ÎåÄÍ≤ÄÏ†ÑÏÇ¨", "Í∂ÅÏàò", "ÏÑùÍ∂ÅÏÇ¨Ïàò", "Ïû•Í∂ÅÎ≥ë", "ÌôîÏóºÏà†ÏÇ¨", "ÎπôÍ≤∞Ïà†ÏÇ¨", "ÏàòÎèÑÏÇ¨", "ÎåÑÏÑú", "ÏïÖÏÇ¨", "ÎßàÎ≤ïÏÇ¨"]
};

// ‚úÖ Ï∫êÎ¶≠ÌÑ∞ Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞
fetch("https://api.sheetbest.com/sheets/776e2812-99b8-4f67-ae74-4b0fa2d6a060")
  .then(res => res.json())
  .then(data => {
    characters = data.map(c => ({
      id: c.id,
      class: c.class,
      power: Number(c.power),
      thumbnail: c.thumbnail || null  // Ïç∏ÎÑ§Ïùº ÏóÜÏúºÎ©¥ null Ï≤òÎ¶¨
    }));
    console.log("‚úÖ Ï∫êÎ¶≠ÌÑ∞ Î°úÎî© ÏôÑÎ£å", characters);
  })
  .catch(err => {
    console.error("‚ùå Ï∫êÎ¶≠ÌÑ∞ Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®", err);
  });

// ‚úÖ Ïó≠Ìï† ÌïÑÌÑ∞ÎßÅ
function filterByRole(role) {
  return characters.filter(c => roleMap[role].includes(c.class));
}

// ‚úÖ Ï§ëÎ≥µ ÏóÜÎäî ÎûúÎç§ ÏÑ†ÌÉù
function getRandomUnique(arr, count, excluded = []) {
  const available = arr.filter(c => !excluded.includes(c.id));
  const shuffled = available.sort(() => 0.5 - Math.random());
  return shuffled.slice(0, count);
}

// ‚úÖ ÎûúÎç§ ÌååÌã∞ ÏÉùÏÑ±
function generateParty() {
  if (characters.length === 0) {
    alert("‚è≥ Ï∫êÎ¶≠ÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º ÏïÑÏßÅ Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§.");
    return;
  }

  const selected = [];

  const dealerList = filterByRole("ÎîúÎü¨");
  const tankList = filterByRole("ÌÉ±Ïª§");
  const healerList = filterByRole("ÌûêÎü¨");

  const dealers = getRandomUnique(dealerList, 2);
  selected.push(...dealers);

  const tank = getRandomUnique(tankList, 1, selected.map(c => c.id))[0];
  const healer = getRandomUnique(healerList, 1, selected.map(c => c.id).concat(tank.id))[0];

  selected.push(tank, healer);

  const totalPower = selected.reduce((sum, c) => sum + c.power, 0);

  // ‚úÖ Ï∂úÎ†• HTML Íµ¨ÏÑ±
  const html = `
    <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 20px;">
      ${selected.map((c, i) => {
        const role = i < 2 ? "üó°Ô∏è ÎîúÎü¨" : i === 2 ? "üõ°Ô∏è ÌÉ±Ïª§" : "‚ú® ÌûêÎü¨";
        const imageElement = c.thumbnail
          ? `<img src="${c.thumbnail}" alt="${c.id}" width="200" height="200" style="border-radius: 8px; object-fit: cover;" />`
          : `<div style="width:200px; height:200px; background:#ccc; border-radius:8px;"></div>`;

        return `
          <div style="width: 220px; display: flex; flex-direction: column; align-items: flex-start;">
            ${imageElement}
            <div style="margin-top: 10px; text-align: left;">
              <p><strong>${role}</strong></p>
              <p>${c.id} (${c.class})</p>
              <p>Ï†ÑÌà¨Î†•: ${c.power}</p>
            </div>
          </div>
        `;
      }).join("")}
    </div>
    <p style="margin-top: 30px; text-align: center;"><strong>‚öîÔ∏è Ï¥ù Ï†ÑÌà¨Î†•: ${totalPower}</strong></p>
  `;

  document.getElementById("party").innerHTML = html;
}
